#############################
# System-wide configuration #
#############################

temp_dir = "/tmp"

# Whether to have a backdoor (see doc for the risks).
backdoor = false

############
# Database #
############

# Connection string for the database.
database = "postgresql+psycopg2://cmsuser:your_password_here@localhost:5432/cmsdb"

# Whether SQLAlchemy prints DB queries on stdout.
database_debug = false

# Whether to use two-phase commit.
twophase_commit = false

##########
# Worker #
##########

# Don't delete the sandbox directory under /tmp/ when they
# are not needed anymore. Warning: this can easily eat GB
# of space very soon.
keep_sandbox = false

###########
# Sandbox #
###########

# Do not allow contestants' solutions to write files bigger
# than this size (expressed in KB; defaults to 1 GB).
max_file_size = 1048576

###############
# Web servers #
###############

# This key is used to encode information that can be seen
# by the user, namely cookies and auto-incremented
# numbers. It should be changed for each
# contest. Particularly, you should not use this example
# for other than testing. It must be a 16 bytes long
# hexadecimal number. You can easily create a key calling:
# python -c 'from cmscommon import crypto; print(crypto.get_hex_random_key())'
secret_key = "8e045a51e4b102ea803c06f92841a1fb"

# Whether Tornado prints debug information on stdout.
tornado_debug = false

####################
# ContestWebServer #
####################

# Listening HTTP addresses and ports for the CWSs listed below
# in core_services. By default only listens on localhost, meaning
# you need a separate reverse proxy to access it from the web.
# Set to empty string to allow connecting from anywhere.
contest_listen_address = ["127.0.0.1"]
contest_listen_port =    [8888]

# Login cookie duration in seconds. The duration is refreshed
# on every manual request.
cookie_duration = 10800

# If CWSs write submissions to disk before storing them in
# the DB, and where to save them. %s = DATA_DIR.
submit_local_copy =      true
submit_local_copy_path = "%s/submissions/"

# The number of proxies that will be crossed before CWSs get
# the request. This is used to decide whether to assume that
# the real source IP address is the one listed in the request
# headers or not. For example, if you're using nginx as a load
# balancer, you will likely want to set this value to 1.
num_proxies_used = 0

# Maximum size of a submission in bytes. If you use a proxy
# and set these sizes to large values remember to change
# client_max_body_size in nginx.conf too.
max_submission_length = 100000
max_input_length = 5000000

# Path to the documentation exposed by CWS. To show a documentation
# link add a folder for each language with index.html inside. For
# example for C++ add 'cpp/index.html', for Java 'java/index.html'.
docs_path = "/usr/share/cms/docs"

##################
# AdminWebServer #
##################

# Listening HTTP address and port for the AWS. By default only
# listens on localhost, meaning you need a separate reverse proxy
# to access it from the web. Set to empty string to allow
# connecting from anywhere.
admin_listen_address = "127.0.0.1"
admin_listen_port =    8889

# Login cookie duration for admins in seconds.
# The duration is refreshed on every manual request.
admin_cookie_duration = 36000

# The number of proxies that will be crossed before AWS gets
# the request. This is used to determine the request's real
# source IP address. For example, if you're using nginx as
# a proxy, you will likely want to set this value to 1.
admin_num_proxies_used = 0

################
# ProxyService #
################

# List of URLs (with embedded username and password) of the
# RWSs where the scores are to be sent. Don't include the
# load balancing proxy (if any), just the backends. If any
# of them uses HTTPS specify a file with the certificates
# you trust.
rankings = ["http://usern4me:passw0rd@localhost:8890/"]
#https_certfile = "..."

###################
# PrintingService #
###################

# Maximum size of a print job in bytes.
max_print_length = 10000000

# Printer name (can be found out using 'lpstat -p';
# if missing, printing is disabled)
#printer = "..."

# Output paper size (probably A4 or Letter)
paper_size = "A4"

# Maximum number of pages a user can print per print job
# (excluding the title page). Text files are cropped to this
# length. Too long pdf files are rejected.
max_pages_per_job = 10
max_jobs_per_user = 10
pdf_printing_allowed = false

######################
# PrometheusExporter #
######################

# Listening HTTP address and port for the exporter. If exposed
# this may leak private information, make sure to secure this endpoint.
prometheus_listen_address = "127.0.0.1"
prometheus_listen_port = 8811

###############
# TelegramBot #
###############

# Bot token and chat ID for the telegram bot. The Telegram bot will
# sync all questions with this chat, if present.
#telegram_bot_token = "..."
#telegram_bot_chat_id = "..."


#########################
# Service configuration #
#########################

# TODO: delete this
other_services = {}

[core_services]

LogService = [["localhost", 29000]]
ResourceService = [["localhost", 28000]]
ScoringService = [["localhost", 28500]]
Checker = [["localhost", 22000]]
EvaluationService = [["localhost", 25000]]
Worker = [
    ["localhost", 26000],
    ["localhost", 26001],
    ["localhost", 26002],
    ["localhost", 26003],
    ["localhost", 26004],
    ["localhost", 26005],
    ["localhost", 26006],
    ["localhost", 26007],
    ["localhost", 26008],
    ["localhost", 26009],
    ["localhost", 26010],
    ["localhost", 26011],
    ["localhost", 26012],
    ["localhost", 26013],
    ["localhost", 26014],
    ["localhost", 26015],
]
ContestWebServer = [["localhost", 21000]]
AdminWebServer = [["localhost", 21100]]
ProxyService = [["localhost", 28600]]
PrintingService = [["localhost", 25123]]
PrometheusExporter = []
TelegramBot = []
